# Generated by Django 5.1.6 on 2025-04-18 08:36

import django.db.models.deletion
import django.db.models.manager
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=400, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('photo_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='feedback_images/')),
                ('rating', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_users', to='user.field')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_fields', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('address', models.TextField(null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], default='MALE', max_length=10, null=True)),
                ('position', models.CharField(choices=[('FOUNDER', 'FOUNDER'), ('CO-FOUNDER', 'CO-FOUNDER'), ('INVESTOR', 'INVESTOR'), ('CEO', 'CEO'), ('CTO', 'CTO'), ('CFO', 'CFO'), ('FINANCE MANAGER', 'FINANCE MANAGER'), ('GENERAL MANAGER', 'GENERAL MANAGER'), ('EVENT MANAGER', 'EVENT MANAGER'), ('PRODUCT MANAGER', 'PRODUCT MANAGER'), ('BLOCKCHAIN DEVELOPER', 'BLOCKCHAIN DEVELOPER'), ('SOLIDITY DEVELOPER', 'SOLIDITY DEVELOPER'), ('DEVELOPER', 'DEVELOPER'), ('ENGINEER', 'ENGINEER'), ('MARKETING', 'MARKETING'), ('INFLUENCER', 'INFLUENCER'), ('INTERN', 'INTERN'), ('COMMUNITY MOD', 'COMMUNITY MOD'), ('PRODUCT DESIGNER', 'PRODUCT DESIGNER'), ('SALES MANAGER', 'SALES MANAGER'), ('RESEARCHER', 'RESEARCHER'), ('SPACEHOST', 'SPACEHOST'), ('TRADER', 'TRADER'), ('GAMING', 'GAMING'), ('EDUCATOR', 'EDUCATOR'), ('ARTIST', 'ARTIST'), ('COLLAB MANAGER', 'COLLAB MANAGER'), ('JOB SEEKING', 'JOB SEEKING'), ('SUBCOMMUNITY', 'SUBCOMMUNITY'), ('CONTENT CREATOR', 'CONTENT CREATOR'), ('TOKEN', 'TOKEN'), ('METAVERSE', 'METAVERSE'), ('COMMUNITY', 'COMMUNITY'), ('HIRING', 'HIRING'), ('BRANDING', 'BRANDING'), ('VALIDATOR', 'VALIDATOR'), ('INCUBATOR', 'INCUBATOR'), ('ACCELERATOR', 'ACCELERATOR'), ('MEDIA', 'MEDIA'), ('BUSINESS DEVELOPMENT OFFICER', 'BUSINESS DEVELOPMENT OFFICER'), ('OTHER', 'OTHER')], default='MALE', max_length=60, null=True)),
                ('project_name', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='user_images')),
                ('telegram_account', models.CharField(blank=True, max_length=150, null=True)),
                ('linkedin_url', models.CharField(blank=True, max_length=150, null=True)),
                ('twitter_account', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company_name', models.CharField(blank=True, max_length=150, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
